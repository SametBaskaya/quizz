export const quizData = {
    easy: [
        { question: "Java'da bir değişkenin değerini nasıl azaltırsınız?", options: ["x-", "x--", "++x", "x-1"], answer: "x--", zorluk:1 },
        { question: "Java'da bir string'in uzunluğunu bulmak için hangi metod kullanılır?", options: ["size()", "length()", "getSize()", "count()"], answer: "length()", zorluk:1},
        { question: "Java'da hangi veri tipi ondalıklı sayıları saklamak için kullanılır?", options: ["int", "boolean", "double", "char"], answer: "double", zorluk:1},
        { question: "Java'da bir sınıf nasıl başlatılır?", options: ["initialize MyClass();", "new MyClass();", "start MyClass();", "create MyClass();"], answer: "new MyClass();", zorluk:2},
        { question: "Aşağıdakilerden hangisi Java'da bir 'if' ifadesinin doğru bir şekilde kullanılma şeklidir?", options: ["if x = 5 {}", "if (x == 5) {}", "if [x == 5] {}", "if x == 5 then {}"], answer: "if (x == 5) {}", zorluk:3 },
        { question: "Java'da hangi döngü 1'den 10'a kadar sayıları yazdırmak için uygundur?", options: ["while (x <= 10)", "do-while (x <= 10)", "for (int i = 1; i <= 10; i++)", "loop (int i = 1; i <= 10; i++)"], answer: "for (int i = 1; i <= 10; i++)",zorluk:3 },
        { question: "Java'da bir sınıfın başka bir sınıftan miras alması için hangi anahtar kelime kullanılır?", options: ["extends", "inherits", "super", "implements"], answer: "extends",zorluk:2 },
        { question: "Java'da bir metodun geri dönüş tipini belirtmeyen anahtar kelime nedir?", options: ["null", "void", "empty","return"], answer: "void",zorluk:2 },
        { question: "Java'da bir diziyi (array) sıralamak için hangi metod kullanılır?", options: ["sortArray()", "Arrays.sort()", "array.sort()", "Collections.sort()"], answer: "Arrays.sort()",zorluk:2},
        { question: "Java'da try-catch bloğunun amacı nedir?", options: ["Kod bloklarını tekrar etmek", "Hataları yakalamak ve yönetmek", "Veritabanına bağlanmak", "Değişkenleri tanımlamak"], answer: "Hataları yakalamak ve yönetmek",zorluk:1},
        { question: "Çıktısı nedir",  image: require('../component/img/eq1.jpg'), options: ["Hello", "Hello World", "World", "HelloWorld"], answer: "Hello World",zorluk:2},
    ],
    medium: [
        { question: "Java'da bir sınıfın diğer sınıflardan türetilememesi için hangi anahtar kelime kullanılır?", options: ["final", "abstract", "static", "extends"], answer: "final",zorluk:1},
        { question: "Çıktısı nedir",  image: require('../component/img/q2.jpg'), options: ["21", "22", "23", "24"], answer: "23",zorluk:3},
        { question: "Javada 'Checked Exception' hangi sınıfın alt sınıflarıdır?", options: ["RuntimeException", "IOException", "Exception", "Error"], answer: "Exception",zorluk:2},
        { question: "Çıktısı  nedir?",image: require('../component/img/q4.jpg'), options: ["3", "0", "ArrayIndexOutOfBoundsException", "NullPointerException"], answer: "ArrayIndexOutOfBoundsException",zorluk:2},
        { question: "Java'da hangi anahtar kelime ile bir yöntemin hem bir sınıfa hem de bir arayüze ait olması sağlanabilir?", options: ["extends", "implements", "instanceof", "default"], answer: "default",zorluk:1},
        { question: "Çıktısı nedir",  image: require('../component/img/q6.jpg'), options: ["JavaProgramming", "Java", "Programming", "NullPointerException"], answer: "Java",zorluk:2},
        { question: "Java'da bir arayüz (interface) içerisinde tanımlanabilecek yöntem türü hangisidir?", options: ["private", "protected", "static", "synchronized"], answer: "static",zorluk:1},
        { question: "Hangi veri yapısı elemanlarını doğal sıralamaya göre sıralı bir şekilde tutar?", options: ["HashMap", "LinkedHashMap", "TreeMap", "Hashtable"], answer: "TreeMap",zorluk:1},
        { question: "Çıktısı nedir",  image: require('../component/img/q9.jpg'), options: ["true", "false", "Compilation Error", "NullPointerException"], answer: "true" ,zorluk:3},
        { question: "Java'da ArrayList ile LinkedList arasındaki farklardan biri nedir?", options: ["ArrayList sabit boyutlu, LinkedList dinamik boyutludur.", "ArrayList sıralıdır, LinkedList sırasızdır.", "ArrayList dizilere dayalıdır, LinkedList ise düğümlere dayalıdır.", "ArrayList çift yönlü bağlı liste, LinkedList tek yönlü bağlı listedir."], answer: "ArrayList dizilere dayalıdır, LinkedList ise düğümlere dayalıdır.",zorluk:2 },
        { question: "Çıktısı nedir",  image: require('../component/img/q11.jpg'), options: ["10", "20", "30", "Hata verir"], answer: "20",zorluk:2},
    ],
    hard: [
        { question: "Java'da bir sınıfın singleton (tekil) olarak tasarlanmasını sağlamak için aşağıdaki adımlardan hangisi gerekli değildir?", options: ["Sınıfın constructor'ını private yapmak", " Sınıf içinde static bir instance oluşturmak", "Sınıfın public bir constructor tanımlamak", "Sınıf içinde public static bir yöntemle instance'a erişim sağlamak"], answer: "Sınıfın public bir constructor tanımlamak",zorluk:1},
        { question: "Java'da garbage collection (çöp toplayıcı) hakkında aşağıdaki ifadelerden hangisi yanlıştır?", options: ["Garbage collector, bir nesnenin bellekteki referansını kaybettiğinde çalışır.", "Garbage collector, sistem belleğini optimize etmek için arka planda çalışır.", "Garbage collector'un çalıştırılması kesinlikle manuel olarak tetiklenebilir.", "Garbage collector, finalize() yöntemi çağrıldıktan sonra nesneyi temizler."], answer: "Garbage collector'un çalıştırılması kesinlikle manuel olarak tetiklenebilir.",zorluk:1},
        { question: "Çıktısı nedir",  image: require('../component/img/cq3.jpg'), options: ["489", "490", "491", "500"], answer: "489",zorluk:2 },
        { question: "Çıktısı nedir",  image: require('../component/img/cq4.jpg'), options: ["true", "false", "Compilation Error", "Runtime Exception"], answer: "false",zorluk:2},
        { question: "Java'da çoklu kalıtımın (multiple inheritance) direkt olarak desteklenmemesinin temel nedeni nedir?", options: ["Java'nın nesne yönelimli bir dil olmaması", "'Diamond problem' olarak bilinen karmaşadan kaçınmak", "Java'nın sade bir programlama dili olarak tasarlanması", "Java'nın sadece arayüz (interface) kalıtımını desteklemesi"], answer: "'Diamond problem' olarak bilinen karmaşadan kaçınmak",zorluk:1},
        { question: "Çıktısı nedir",  image: require('../component/img/cq6.jpg'), options: ["0", "20", "-20", "10"], answer: "10",zorluk:3},
        { question: "Çıktısı nedir",  image: require('../component/img/cq7.jpg'), options: ["1", "3", "5", "7"], answer: "1",zorluk:3 },
        { question: "Java'da bir sınıfın clone edilmesini kontrol etmek için aşağıdakilerden hangisi doğru bir yaklaşımdır?", options: ["Sınıfı Cloneable arayüzünden türetmek ve clone() yöntemini override etmek", "Object sınıfının clone() yöntemini override etmek ve Cloneable arayüzünü uygulamamak", "Cloneable arayüzünü implement etmek, ancak clone() yöntemini override etmemekSınıfı Serializable arayüzünden türetmek ve clone() yönteCloneable arayüzünü implement etmek, ancak clone() yöntemini override etmemekmini override etmek", "Sınıfı Serializable arayüzünden türetmek ve clone() yöntemini override etmek"], answer: "Sınıfı Cloneable arayüzünden türetmek ve clone() yöntemini override etmek",zorluk:1 },
        { question: "Çıktısı nedir",  image: require('../component/img/cq9.jpg'), options: ["abcd", "abcx", "bcdx", "bcdefg"], answer: "bcdx",zorluk:3},
        { question: "Çıktısı nedir",  image: require('../component/img/cq10.jpg'), options: ["5", "10", "15", "Compilation Error"], answer: "10",zorluk:2},
        { question: "Java'da bir sınıfın değiştirilemez (immutable) olmasını sağlamak için aşağıdaki adımlardan hangisi yanlıştır?", options: ["Tüm alanları private ve final yapmak", "Sınıf içinde setter yöntemleri tanımlamak", "Sınıf içinde değiştirilemez (immutable) alanları this ile atamak", "Sınıf içinde mutasyona uğramayan (unchangeable) metodlar kullanmak"], answer: "Sınıf içinde setter yöntemleri tanımlamak",zorluk:1 },
    ]
};
